spring.application.name=hrms-backend

# ----------------------------------------------------
# PostgreSQL
# ----------------------------------------------------
spring.datasource.url=jdbc:postgresql://localhost:5432/hrms_db
spring.datasource.username=postgres
spring.datasource.password=root

# JPA / Hibernate
spring.jpa.hibernate.ddl-auto=none
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# --- JSON naming ---
spring.jackson.property-naming-strategy=SNAKE_CASE
spring.jackson.mapper.accept-case-insensitive-enums=true


#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect   # (OK to keep or remove)

# ----------------------------------------------------
# Flyway
# ----------------------------------------------------
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true
spring.flyway.locations=classpath:db/migration
spring.flyway.clean-disabled=false    
# disable in prod!

# ----------------------------------------------------
# RabbitMQ connection
# ----------------------------------------------------
spring.rabbitmq.host=localhost
spring.rabbitmq.port=5672
spring.rabbitmq.username=guest
spring.rabbitmq.password=guest

# HRMS messaging details
hrms.rabbitmq.employee.exchange=hrms.employee.exchange
hrms.rabbitmq.employee.queue=hrms.employee.queue
hrms.rabbitmq.employee.routing-key=employee.*   # or employee.created if you switched to direct exchange



# RabbitMQ topology for employee‐created events
hrms.rabbitmq.exchange=hrms.employee.exchange
hrms.rabbitmq.queue=hrms.employee.created.queue
hrms.rabbitmq.routing-key=employee.created
# DLQ → same exchange, dead‐letter routing key = queue+" .dlq"

# where to write uploaded photos (relative or absolute)
employee.photos.dir=C:\Users\Lenovo\HRMS-RAB\photos


# Optional (override if 8080 is busy)
server.port=8080
